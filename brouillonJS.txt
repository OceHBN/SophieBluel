//1.recuperer tous les projets grace à fetch + asyn 
//___test1_______________________
//async function gallery() {
// const response = await fetch('http://localhost:5678/api/works');
//  const works = await response.json();
//  console.log("chargement ok")
//}
//gallery()

//const workObjets = works.filter(work => work.categoryId === 2);
//console.log("Objets filtrés :", workObjets);
//_____test2___________________
//const works = fetch('http://localhost:5678/api/works')
// .then(response => { return response.json() })
// .then(console.log("chargement ok"))
// .then(data => { console.log("données traitées:", data) })

//console.log(works)
//______________________________
// 2.fetch pour recup les projets par categorie, puis une fonction filtre avec parametre Category(id:1)
//const workCategorieObjet { }
//const workObjets = works.filter(work => work.categoryId === 2)
//console.log(workObjets)

2.lancer la page de navigation 
//PAGE DE CONNEXION
//Recupérer la liste de navigation
const boutonsNav = document.querySelectorAll('ul > li')
console.log(boutonsNav)
//Creer un listenner au click sur l'élément "login" = afficher la section id #contact
function lancerBoutonsNav() {
    boutonsNav.addEventListener('click', (index) => {
        const button = event.target.index;
        if (button === 0) { get / index.html }
        else if (button === 1) { get / index.html }
        else if (button === 2) { get / login.html }
    })
}
lancerBoutonsNav();
//______________________________
Notes: 
Via la fonction ObjetsFilter = Return "map" -> permet de transformé les informations recupérées et filtrées en HTML